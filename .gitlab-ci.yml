#
#  Yaml CI config for Gitlab See. http://docs.gitlab.com/ce/ci/yaml/README.html
#

image: docker-registry.oxfordnanolabs.local:5000/ont-base-ubuntu:16.04

stages:
    - test
    - release

# TODO(semen): move these installation steps into a script so that user can run them on a clean box
before_script:
    - apt-get update
    - apt-get install -y python-virtualenv
    - apt-get install -y python-numpy python-h5py python-scipy python-docutils 
    - apt-get install -y cython python-pip python-all-dev python-setuptools ont-ca-certs
    - pip install pip --upgrade

do_testing:
    stage: test
    script:
        - make testFromScratch
    except:
        - tags

#
# TODO(semen): there's a general problem with this build script: we should build the tarball and upload it to the server and then test target should pick it up and exercise it, rather than the other way around. If the tests pass then the tarball should be marked as releasable. Otherwise it is easy to end up in the state we are in now: the deployable that do_release scp'es is not installable.
#

do_release:
    stage: release
    script:
        #  Build project
        - python setup.py sdist
        #  Going to push project via ssh.
        #  PYPI_KEY and PYPI_HOST should set up as project variables on Gitlab
        #  PYPI_KEY is private key produced by ssh-keygen
        - apt-get install -y openssh-client
        - eval $(ssh-agent -s)
        - ssh-add <(set +x; echo "$PYPI_KEY")
        - scp -o StrictHostKeyChecking=no dist/* gitlab-ci-pypi@${PYPI_HOST}:/opt/ont-pypi/site-packages/
    only:
        #  Only do a release of tags marked explicit as release (match this regular expression)
        - /^release_.*$/
    except:
        #  Do look for tags in branches
        - branches

